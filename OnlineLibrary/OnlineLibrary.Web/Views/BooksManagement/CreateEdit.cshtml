@using OnlineLibrary.Web.Models.BooksManagement.CreateEditBookViewModels
@using System.Linq
@model CreateEditBookViewModel
@{
    ViewBag.Title = "CreateEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section CSS {
    <style>
        #bookAuthors .book-author { margin-bottom: 10px; }
    </style>
}

<h2>Book Management</h2>

<div>
    @using (Html.BeginForm("CreateEdit", "BooksManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group"> 
            <label>ISBN</label> 
            @Html.TextBoxFor(m => m.ISBN, new { @class = "form-control"})
        </div>
        <div class="form-group"> 
             <label>Title</label> 
             @Html.TextBoxFor(m => m.Title, new { @class = "form-control" }) 
        </div>
        <div class="form-group">
             <label>Description</label> 
             @Html.TextAreaFor(m => m.Description, new { @class = "form-control" }) 
        </div>
        <div class="form-group"> 
             <label>Publish Date</label>
             @Html.TextBoxFor(m => m.PublishDate, new { @class = "form-control" }) 
        </div>
        <div class="form-group"> 
            <label>Front Cover</label> 

            @if (Model.FrontCover != null)
            {
                <img width="100" height="100" src=@Url.Content(Model.FrontCover) />
            }           
        </div>
        <div class="form-group">
            <input type="file" name="Image" />
        </div>

    <div id="bookAuthors" class="form-inline">
        <h3>Authors:</h3>
        <hr />
        @for (int i = 0; i < Model.Authors.Count(); i++)
        {
            <div class="book-author" data-author-id="@i">
                @Html.HiddenFor(m => m.Authors[i].Id)
                @Html.HiddenFor(m => m.Authors[i].IsRemoved, new { @class = "is-removed" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Authors[i].FirstName)
                    @Html.TextBoxFor(m => m.Authors[i].FirstName, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Authors[i].MiddleName)
                    @Html.TextBoxFor(m => m.Authors[i].MiddleName, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Authors[i].LastName)
                    @Html.TextBoxFor(m => m.Authors[i].LastName, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <button class="btn btn-sm btn-danger btn-remove-author-modal" data-toggle="modal" 
                            data-target="#removeAuthorConfirmation" type="button">
                        <span class="glyphicon glyphicon-remove"></span>
                    </button>
                </div>
            </div>
        }
    </div>

    <div class="modal fade" id="removeAuthorConfirmation" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Warning!</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to remove this author?
                </div>
                <div class="modal-footer">
                    <button id="btnRemoveAuthorConfirm" type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div id="bookCategories">

    </div>
    <input type="button" id="AddBookAuthor" value="Add Author" class="btn btn-default">


        <p> <strong>Book Copies</strong> </p>

            <div id="bookCopies">
                <table class="col-sm-12 table-hover">
                
                @for (int i = 0; i < Model.BookCopies.Count(); i++)
                {
                    <tr>
                        <td class="col-sm-2">BookCopyId = @Model.BookCopies[i].Id</td>
                        <td class="col-sm-10">
                            <div class="bookCopy" data-book-copy-id="@i">
                                @Html.HiddenFor(m => m.BookCopies[i].Id)
                                @Html.EnumDropDownListFor(m => m.BookCopies[i].BookCondition, new { @class = "form-control"})
                            </div>
                        </td>
                    </tr>
                }
                </table>
            </div>

        <p> <input type="button" id="AddBookCopy" value="Add Copy" class="btn btn-default" /> </p> 
        <input type="submit" value="Save"  class="btn btn-primary" />
    }

</div>
@section scripts{

<script>
    $(document).ready(function () {

        $("#btnRemoveAuthorConfirm").click(function () {
            // Extract the author ID to remove.
            var authorIdToRemove = parseInt($(this).attr("data-author-to-remove-id"));

            // Find and hide the parent book-author container element.
            var bookAuthor = $('#bookAuthors .book-author[data-author-id="' + authorIdToRemove + '"]').first();
            bookAuthor.slideUp(1000, function () {
                var isRemovedInput = $(this).children(".is-removed");
                isRemovedInput.val(true);
            });
        });

        // Copies the author ID to modal window.
        function btnRemoveAuthorModal() {
            var authorId = $(this).closest(".book-author").data("authorId");
            $("#btnRemoveAuthorConfirm").attr("data-author-to-remove-id", authorId);
        }

        $(".btn-remove-author-modal").click(btnRemoveAuthorModal);

        $("#AddBookAuthor").click(function () {
            var authorsDiv = document.getElementById("bookAuthors");
            var newBookAuthorId = parseInt($("#bookAuthors .book-author").last().data("authorId")) + 1;

            if (isNaN(newBookAuthorId)) {
                newBookAuthorId = 0;
            }

            // Create a div for new Author.
            var newAuthorDiv = document.createElement("div")
            newAuthorDiv.className = "book-author";
            newAuthorDiv.setAttribute("data-author-id", newBookAuthorId);

            // Create inputs for Author data.
            // IsRemoved.
            var isRemovedInput = document.createElement("input");
            isRemovedInput.className = "is-removed";
            isRemovedInput.name = "Authors[" + newBookAuthorId + "].IsRemoved";
            isRemovedInput.type = "hidden";
            isRemovedInput.value = "false";

            newAuthorDiv.appendChild(isRemovedInput);

            // First Name.
            var formGroup = document.createElement("div");
            formGroup.className = "form-group";

            var firstNameLabel = document.createElement("label");
            firstNameLabel.htmlFor = "Authors_" + newBookAuthorId + "__FirstName";
            firstNameLabel.innerHTML = "First Name";

            var firstNameInput = document.createElement("input");
            firstNameInput.name = "Authors[" + newBookAuthorId + "].FirstName";
            firstNameInput.id = "Authors_" + newBookAuthorId + "__FirstName";
            firstNameInput.type = "text";
            firstNameInput.className = "form-control";

            formGroup.appendChild(firstNameLabel);
            formGroup.appendChild(firstNameInput);
            newAuthorDiv.appendChild(formGroup);

            // Middle Name.
            formGroup = document.createElement("div");
            formGroup.className = "form-group";

            var middleNameLabel = document.createElement("label");
            middleNameLabel.htmlFor = "Authors_" + newBookAuthorId + "__MiddleName";
            middleNameLabel.innerHTML = "Middle Name";

            var middleNameInput = document.createElement("input");
            middleNameInput.id = "Authors_" + newBookAuthorId + "__MiddleName";
            middleNameInput.name = "Authors[" + newBookAuthorId + "].MiddleName";
            middleNameInput.type = "text";
            middleNameInput.className = "form-control";

            formGroup.appendChild(middleNameLabel);
            formGroup.appendChild(middleNameInput);
            newAuthorDiv.appendChild(formGroup);

            // Last Name.
            formGroup = document.createElement("div");
            formGroup.className = "form-group";

            var lastNameLabel = document.createElement("label");
            lastNameLabel.htmlFor = "Authors_" + newBookAuthorId + "__LastName";
            lastNameLabel.innerHTML = "Last Name";

            var lastNameInput = document.createElement("input");
            lastNameInput.id = "Authors_" + newBookAuthorId + "__LastName";
            lastNameInput.name = "Authors[" + newBookAuthorId + "].LastName";
            lastNameInput.type = "text";
            lastNameInput.className = "form-control";

            formGroup.appendChild(lastNameLabel);
            formGroup.appendChild(lastNameInput);
            newAuthorDiv.appendChild(formGroup);

            // Button.
            formGroup = document.createElement("div");
            formGroup.className = "form-group";

            var removeButton = document.createElement("button");
            removeButton.className = "btn btn-sm btn-danger btn-remove-author-modal";
            removeButton.type = "button";
            removeButton.setAttribute("data-toggle", "modal");
            removeButton.setAttribute("data-target", "#removeAuthorConfirmation");
            $(removeButton).click(btnRemoveAuthorModal);

            // Button icon.
            var removeButtonIcon = document.createElement("span");
            removeButtonIcon.className = "glyphicon glyphicon-remove";
            removeButton.appendChild(removeButtonIcon);

            formGroup.appendChild(removeButton);
            newAuthorDiv.appendChild(formGroup);

            // Add new Author div to all authors
            $("#bookAuthors").append(newAuthorDiv);
        })
    });

    $(document).ready(function () {
        $("#AddBookCopy").click(function () {
            // Retreive book conditions.
            var ajaxData = {
                method: "GET",
                complete: function (jqXHR) {
                    var bookConditions = jqXHR.responseJSON;

                    var newId = parseInt($("#bookCopies .bookCopy").last().data("bookCopyId")) + 1;

                    if (isNaN(newId)) {
                        newId = 0;
                    }
                    
                    var newTr = document.createElement("tr");

                    var newTd = document.createElement("td");
                    newTd.className = "col-sm-2";
                    newTd.innerHTML = "BookCopyId = newId";

                    var newTd2 = document.createElement("td");
                    newTd2.className = "col-sm-10";

                    var newDiv = document.createElement("div");
                    newDiv.className = "bookCopy";
                    $(newDiv).data("book-copy-id", newId);

                    var bookCopySelect = document.createElement("select");
                    bookCopySelect.id = "BookCopies_" + newId + "__BookCondition";
                    bookCopySelect.name = "BookCopies[" + newId + "].BookCondition";
                    bookCopySelect.setAttribute("dataid", newId);
                    bookCopySelect.className = "form-control";

                    // Fill dropdown.
                    for (var i = 0; i < bookConditions.length; i++) {
                        var optionElement = document.createElement("option");
                        optionElement.value = bookConditions[i].Value;
                        optionElement.innerHTML = bookConditions[i].Name;

                        bookCopySelect.appendChild(optionElement);
                    }

                    newDiv.appendChild(bookCopySelect);
                    newTd2.appendChild(newDiv);
                    newTr.appendChild(newTd);
                    newTr.appendChild(newTd2);
                    
                    $("#bookCopies table").append(newTr);
                }
            };
            $.ajax("@Url.Action("ListBookConditions", "BooksManagement")", ajaxData);
        });

    });
</script>

}

