@using OnlineLibrary.Web.Models.BooksManagement.CreateEditBookViewModels
@using System.Linq
@model CreateEditBookViewModel
@{
    ViewBag.Title = "CreateEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Book Management</h2>

<div>
    @using (Html.BeginForm("CreateEdit", "BooksManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group">
            <label>ISBN</label>
            @Html.TextBoxFor(m => m.ISBN, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Title</label>
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Description</label>
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Publish Date</label>
            @Html.EditorFor(m => m.PublishDate, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Front Cover</label>

            @if (Model.FrontCover != null)
            {
                <img height="200" src=@Url.Content(Model.FrontCover) />
            }
        </div>
        <div class="form-group">
            <input type="file" name="Image" />
        </div>

        <div id="bookAuthors">
            @for (int i = 0; i < Model.Authors.Count(); i++)
            {
                <div class="bookAuthor" data-author-id="@i">
                    @Html.HiddenFor(m => m.Authors[i].Id)
                    <label> First Name</label>  @Html.EditorFor(m => m.Authors[i].FirstName)
                    <label> Middle Name</label> @Html.EditorFor(m => m.Authors[i].MiddleName)
                    <label> Last Name</label> @Html.EditorFor(m => m.Authors[i].LastName)
                </div>
            }
        </div>

        <div id="bookCategories">

        </div>
        <input type="button" id="AddBookAuthor" value="Add Author" class="btn btn-default">

        <p></p>
        <p> <strong>Book Copies</strong> </p>

        <div id="bookCopies">
            <table class="col-sm-12 table-hover">

                @for (int i = 0; i < Model.BookCopies.Count(); i++)
                {
                    <tr id="bookcopy@(Model.BookCopies[i].Id)">
                        <td class="col-sm-2">BookCopyId = @Model.BookCopies[i].Id</td>
                        <td class="col-sm-6">
                            <div class="bookCopy">
                                @Html.HiddenFor(m => m.BookCopies[i].Id)
                                @Html.EnumDropDownListFor(m => m.BookCopies[i].BookCondition, new { @class = "form-control" })
                            </div>
                        </td>
                        <td class="col-sm-4">
                            <!-- Trigger Button for DeleteBookCopyModal -->
                            <button type="button" class="btn btn-danger btn-sm passBookCopyIdForDelete" data-toggle="modal" data-target="#deleteCopy" data-book-copy-id="@(Model.BookCopies[i].Id)">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </table>
        </div>

            <p> <input type="button" id="AddBookCopy" value="Add Copy" class="btn btn-primary" /> </p>
            <input type="submit" value="Save" class="btn btn-primary" />

    }

</div>

<!-- DeleteBookCopyModal  -->
<div class="modal fade" id="deleteCopy" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="deleteBookCopyLabel">Delete the current book copy</h4>
            </div>

            <div class="modal-body">
                <label>Are you sure you want to delete this book copy?</label>
            </div>
            <div class="modal-footer">
                <input id="bookCopyId" name="id" hidden="hidden" />
                <button type="submit" data-book-copy-id="" id="confirm-remove" class="btn btn-primary" data-dismiss="modal">Yes</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script src="~/Scripts/knockout-3.4.0.js"></script>

    <script>
    $(document).ready(function () {
        $("#AddBookAuthor").click(function () {
            var authorsDiv = document.getElementById("bookAuthors");
            var newBookAuthorId = parseInt($("#bookAuthors .bookAuthor").last().data("authorId")) + 1;

            if (isNaN(newBookAuthorId)) {
                newBookAuthorId = 0;
            }

            // Create a div for new Author

            var newAuthorDiv = document.createElement("div")
            newAuthorDiv.className = "bookAuthor";
            newAuthorDiv.setAttribute("data-author-id", newBookAuthorId);

            // Create inputs for Author Data
            var newFirstNameLabel = document.createElement("label");
            newFirstNameLabel.innerHTML = "First Name";

            var newFirstNameInput = document.createElement("input");
            newFirstNameInput.name = "Authors[" + newBookAuthorId + "].FirstName";
            newFirstNameInput.type = "text";

            var newMiddleNameLabel = document.createElement("label");
            newMiddleNameLabel.innerHTML = "Middle Name";

            var newMiddleNameInput = document.createElement("input");
            newMiddleNameInput.name = "Authors[" + newBookAuthorId + "].MiddleName";
            newMiddleNameInput.type = "text";

            var newLastNameLabel = document.createElement("label");
            newLastNameLabel.innerHTML = "Last Name";

            var newLastNameInput = document.createElement("input");
            newLastNameInput.name = "Authors[" + newBookAuthorId + "].LastName";
            newLastNameInput.type = "text";

            // Add imputs to created Author div
            newAuthorDiv.appendChild(newFirstNameLabel)
            newAuthorDiv.appendChild(newFirstNameInput);

            newAuthorDiv.appendChild(newMiddleNameLabel)
            newAuthorDiv.appendChild(newMiddleNameInput);

            newAuthorDiv.appendChild(newLastNameLabel)
            newAuthorDiv.appendChild(newLastNameInput);

            // Add new Author div to all authors
            $("#bookAuthors").append(newAuthorDiv);
        })
    });

    $(document).ready(function () {

        var id = 0;

        $("#AddBookCopy").click(function () {
            // Retreive book conditions.
            var ajaxData = {
                method: "GET",
                complete: function (jqXHR) {
                    var bookConditions = jqXHR.responseJSON;

                    var newId = parseInt($("#bookCopies").find("button[data-book-copy-id]").last().data("bookCopyId"));
                    if (newId < 0) {
                        newId = newId - 1;
                    }
                    else { newId = -1; }

                    if (isNaN(newId)) {
                        newId = 0;
                    }

                    var newTr = document.createElement("tr");
                    newTr.id = "bookcopy" + newId;

                    var newTd = document.createElement("td");
                    newTd.className = "col-sm-2";
                    newTd.innerHTML = "BookCopyId = newId";

                    var newTd2 = document.createElement("td");
                    newTd2.className = "col-sm-6";

                    var newTd3 = document.createElement("td");
                    newTd3.className = "col-sm-4";

                    var newDiv = document.createElement("div");
                    newDiv.className = "bookCopy";
                    $(newDiv).data("book-copy-id", newId);

                    var bookCopySelect = document.createElement("select");
                    bookCopySelect.id = "BookCopies_" + newId + "__BookCondition";
                    bookCopySelect.name = "BookCopies[" + newId + "].BookCondition";
                    bookCopySelect.setAttribute("dataid", newId);
                    bookCopySelect.className = "form-control";

                    // Fill dropdown.
                    for (var i = 0; i < bookConditions.length; i++) {
                        var optionElement = document.createElement("option");
                        optionElement.value = bookConditions[i].Value;
                        optionElement.innerHTML = bookConditions[i].Name;

                        bookCopySelect.appendChild(optionElement);
                    }
                    var newButton = document.createElement("button");
                    newButton.className = "btn btn-danger btn-sm passBookCopyIdForDelete";
                    newButton.type = "button";
                    newButton.setAttribute("data-toggle", "modal");
                    newButton.setAttribute("data-target", "#deleteCopy");
                    newButton.setAttribute("data-book-copy-id", newId);
                    newButton.innerHTML = "Delete";

                    newDiv.appendChild(bookCopySelect);
                    newTd2.appendChild(newDiv);
                    newTd3.appendChild(newButton);
                    newTr.appendChild(newTd);
                    newTr.appendChild(newTd2);
                    newTr.appendChild(newTd3);

                    $("#bookCopies table").append(newTr);

                    $(".passBookCopyIdForDelete").click(function () {
                        id = $(this).data('bookCopyId');
                    });

                    $("#confirm-remove").click(function () {
                        var trToRemove = $("#bookcopy" + id);
                        trToRemove.fadeOut(1000, function () {
                            trToRemove.remove();
                        })

                    })
                }
            };
            $.ajax("@Url.Action("ListBookConditions", "BooksManagement")", ajaxData);
        });

        $(".passBookCopyIdForDelete").click(function () {
            id = $(this).data('bookCopyId');
        });

        $("#confirm-remove").click(function () {
            var trToRemove = $("#bookcopy" + id);
            trToRemove.fadeOut(1000, function () {
                trToRemove.remove();
            })

        })
    });

    </script>

}

