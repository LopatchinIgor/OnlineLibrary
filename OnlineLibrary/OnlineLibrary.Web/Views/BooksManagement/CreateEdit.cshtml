@using OnlineLibrary.Web.Models.BooksManagement.CreateEditBookViewModels
@using System.Linq

@model CreateEditBookViewModel
@{
    ViewBag.Title = "CreateEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Book Management</h2>

@section CSS{
    @Styles.Render("~/Content/cssjqueryUI")
    <link href="~/Content/toastr.min.css" rel="stylesheet" />
    @Styles.Render("~/Content/css")
    <link href="~/Content/Views stylesheets/BooksManagement/CreateEdit.css" rel="stylesheet" />
}

<div>
    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#googleImportModal">Import from Google Books</button>

    @using (Html.BeginForm("CreateEdit", "BooksManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-2">

                <div class="form-group">
                    <label>Front Cover</label>
                    @if (!string.IsNullOrEmpty(Model.BookCover.FrontCover))
                    {
                        <img id="localImage" class="img-small-responsive margin-bottom-10" src=@Url.Content(Model.BookCover.FrontCover) />
                        <input id="localImageInput" type="hidden" value="@Model.BookCover.FrontCover" name="BookCover.FrontCover" />
                    }
                    
                    @*Load Image*@
                    <div id="ImageLoad" class="form-group">
                        <label class="inputFileButton">
                            <input type="file" id="inputFile" name="BookCover.Image" class="inputfile" />
                            <span class="btn btn-primary">Upload Image</span>
                        </label>
                        <div id="textImageFileName"></div>
                    </div>

                    <input type="hidden" id="oldImagePath" name="OldImagePath" value="" />
                </div>
                @Html.ValidationMessageFor(m => m.BookCover)
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <label>ISBN</label>
                    @Html.TextBoxFor(m => m.ISBN, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ISBN)
                </div>
                <div class="form-group">
                    <label>Title</label>
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Title)
                </div>
                <div class="form-group">
                    <label>Publish Date</label>
                    @*@Html.TextBoxFor(m => m.PublishDate, new { @class = "form-control datepicker ui-datepicker" })*@
                    <input type="text" class="form-control datepicker ui-datepicker" name="PublishDate" value="@Model.PublishDate.ToShortDateString()" />
                    @Html.ValidationMessageFor(m => m.PublishDate)
                </div>
            </div>
            <div class="col-sm-7">
                <div class="form-group">
                    <label>Description</label>
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", style = "height: 185px; max-width: 100%;" })
                    @Html.ValidationMessageFor(m => m.Description)
                </div>
            </div>
        </div>

        <div id="bookAuthors">
            <hr />
            <h3>Authors:</h3>
            <table class="table table-hover">
                <tbody>
                    @for (int i = 0; i < Model.Authors.Count(); i++)
                    {
                        <tr class="book-author" data-author-id="@i">
                            <td>
                                <input type="hidden" name="Authors[@i].Id" value="@Model.Authors[i].Id" class="form-control" />
                                <input type="hidden" name="Authors[@i].IsRemoved" value="false" class="form-control is-removed" />
                                @Html.LabelFor(m => m.Authors[i].AuthorName.FirstName)
                                <input type="text" name="Authors[@i].AuthorName.FirstName" value="@Model.Authors[i].AuthorName.FirstName" class="form-control" />
                                @Html.ValidationMessageFor(m => m.Authors[i].AuthorName.FirstName)
                            </td>
                            <td>
                                @Html.LabelFor(m => m.Authors[i].AuthorName.MiddleName)
                                <input type="text" name="Authors[@i].AuthorName.MiddleName" value="@Model.Authors[i].AuthorName.MiddleName" class="form-control" />
                                @Html.ValidationMessageFor(m => m.Authors[i].AuthorName.MiddleName)
                            </td>
                            <td>
                                @Html.LabelFor(m => m.Authors[i].AuthorName.LastName)
                                <input type="text" name="Authors[@i].AuthorName.LastName" value="@Model.Authors[i].AuthorName.LastName" class="form-control" />
                                @Html.ValidationMessageFor(m => m.Authors[i].AuthorName.LastName)
                            </td>
                            <td id="tdRemoveAuthorButton">
                                <button class="btn btn-sm btn-danger btn-remove-author-modal" data-toggle="modal"
                                        data-target="#removeAuthorConfirmation" type="button">
                                    <span class="glyphicon glyphicon-remove"></span>
                                </button>
                            </td>
                        </tr>
                        @Html.ValidationMessageFor(m => m.Authors[i].AuthorName)
                    }
                    @if (!Model.Authors.Any())
                    {
                        <tr>
                            <td>
                                @Html.ValidationMessageFor(m => m.Authors)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="form-group">
            <div class="modal fade" id="removeAuthorConfirmation" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Warning!</h4>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to remove this author?
                        </div>
                        <div class="modal-footer">
                            <button id="btnRemoveAuthorConfirm" type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
                            <button type="button" class="btn btn-primary" data-dismiss="modal">
                                Cancel
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <input type="button" id="AddBookAuthor" value="Add Author" class="btn btn-primary">
        </div>

        <hr />
        <div id="book-categories-subcategories">
            <div class="row">
                <div class="col-md-3">
                    <h4>Book Category</h4>
                </div>
                <div class="col-md-3">
                    <h4>Book Subcategory</h4>
                </div>
            </div>
            @for (int i = 0; i < Model.BookCategories.Count(); i++)
            {
                <div class="row book-category-subcategory" style="margin-top: 10px">
                    @Html.HiddenFor(m => m.BookCategories[i].IsRemoved, new { @class = "is-book-category-removed" })
                    <div class="col-md-3 book-category">
                        @Html.DropDownList($"BookCategories[{i}].Id", Model.BookCategories[i].Categories, new { @class = "form-control select-category" })
                    </div>
                    <div class="col-md-3 book-subcategory">
                        @if (Model.BookCategories[i].Subcategories != null)
                        {
                            @Html.DropDownList($"BookCategories[{i}].Subcategory.Id", Model.BookCategories[i].Subcategories, new { @class = "form-control" })
                        }
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-sm btn-danger remove-book-category" type="button">
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </div>
                </div>
            }
        </div>
       
        <button type="button" id="add-category" class="btn btn-primary" style="margin-top: 10px">Add Category</button>
        
        <p></p>

        <div id="googleJsonCategory"></div>

        <hr />

        <h3>Book Copies:</h3>

        <div id="bookCopies" class="form-inline">
            <table id="bookCopyTable" class="table table-hover">

                @for (int i = 0; i < Model.BookCopies.Count(); i++)
                {
                    <tr id="bookCopy@(i)">
                        <td class="col-sm-2">Book Copy Id = @Model.BookCopies[i].Id</td>
                        <td class="col-sm-3">
                            <div class="bookCopy">
                                <input type="hidden" name="BookCopies[@i].Id" value="@Model.BookCopies[i].Id" class="form-control" />
                                <select name="BookCopies[@i].BookCondition" class="form-control">
                                    @foreach (var item in Model.AllBookConditions)
                                    {
                                        <option value="@item.Key"
                                                @if (item.Key == Model.BookCopies[i].BookCondition) { @: selected="selected"
                                                                                                }>
                                            @item.Value
                                                                                            </option>
                                    }
                                </select>
                                @*@Html.EnumDropDownListFor(m => m.BookCopies[i].BookCondition, new { @class = "form-control" })*@
                                <input class="IsToBeDeleted" type="hidden" name="BookCopies[@(i)].IsToBeDeleted" value="false" />
                            </div>
                        </td>
                        <td class="col-sm-7">
                            <!-- Trigger Button for DeleteBookCopyModal -->
                            <button type="button" class="btn btn-danger btn-sm passBookCopyForDelete" data-toggle="modal" data-target="#deleteCopy" data-book-copy-row-id="@i">
                                <span class="glyphicon glyphicon-remove"></span>
                            </button>
                        </td>
                    </tr>
                }
            </table>
        </div>

        <div class="form-group">
            <input type="button" id="AddBookCopy" value="Add Copy" class="btn btn-primary" />
        </div>
        @Html.ValidationMessageFor(m => m.BookCopies)

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    }
</div>

<!-- DeleteBookCopyModal  -->
<div class="modal fade" id="deleteCopy" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="deleteBookCopyLabel">Delete the current book copy</h4>
            </div>

            <div class="modal-body">
                <label>Are you sure you want to delete this book copy?</label>
            </div>
            <div class="modal-footer">
                <input id="bookCopyRowId" name="rowid" hidden="hidden" />
                <input id="bookCopyId" name="id" hidden="hidden" />
                <button type="submit" id="confirm-remove" class="btn btn-primary" data-dismiss="modal">Yes</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<!-- Google Import Modal -->
<div class="container">
    <div class="modal fade" id="googleImportModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Import book details from Google Books</h4>
                </div>
                <div class="modal-body">
                    <h4>Search the book to be imported by entering an ISBN:</h4>
                    <p class="form-group">
                        <input type="text" id="searchISBN" class="form-control inlineblock" />
                        <input type="button" class="btn btn-primary" id="searchByISBN" value="Search" />
                        <div id="validationMessage"></div>
                    </p>

                    <div id="content">
                        <table id="resultTable" class="table table-bordered" cellpadding="10"></table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {    
    @Scripts.Render("~/bundles/jqueryui")
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/View Scripts/BooksManagement/CreateEdit.js"></script>
}

