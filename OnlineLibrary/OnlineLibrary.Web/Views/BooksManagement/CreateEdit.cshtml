@using OnlineLibrary.Web.Models.BooksManagement.CreateEditBookViewModels
@using System.Linq
@model CreateEditBookViewModel
@{
    ViewBag.Title = "CreateEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateEdit</h2>

<div>
    @using (Html.BeginForm("CreateEdit", "BooksManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group"> 
            <label>ISBN</label> 
            @Html.TextBoxFor(m => m.ISBN, new { @class = "form-control"})
        </div>
        <div class="form-group"> 
             <label>Title</label> 
             @Html.TextBoxFor(m => m.Title, new { @class = "form-control" }) 
        </div>
        <div class="form-group">
             <label>Description</label> 
             @Html.TextAreaFor(m => m.Description, new { @class = "form-control", style= " height:200px " }) 
        </div>
        <div class="form-group"> 
             <label>Publish Date</label>
             @Html.EditorFor(m => m.PublishDate, new { @class = "form-control" }) 
        </div>
        <div class="form-group"> 
            <label>Front Cover</label> 
        </div>
        if (Model.FrontCover != null)
        {
            <img width="100" height="100" src=@Url.Content(Model.FrontCover) />
        }
        //Load Image
        <div class="form-group">
            <input type="file" name="Image" />
        </div>

        //Book Auhtors
    <div id="bookAuthors" class="form-group">
        @for (int i = 0; i < Model.Authors.Count(); i++)
        {
            <div class="bookAuthor" data-author-id="@i">   
                @Html.HiddenFor(m => m.Authors[i].Id)
                <label> First Name</label>  @Html.EditorFor(m => m.Authors[i].FirstName)
                <label> Middle Name</label> @Html.EditorFor(m => m.Authors[i].MiddleName)
                <label> Last Name</label> @Html.EditorFor(m => m.Authors[i].LastName)
            </div>
        }
    </div>
    <p class="form-group"> 
        <input type="button" id="AddBookAuthor" value="Add Author" class="btn btn-default"> 
    </p>

        //Book Category 
    <div id="book-categories-subcategories" class="form-group">  
            <div class="book-category-subcategory form-inline">
                <div class="form-group">
                    <label>Category</label>
                    @Html.DropDownList("Categories", Model.AllCategories, new { @class = "book-category form-control" })
                </div>
            </div>
    </div>
    <p class="form-group">
        <button type="button" id="add-category" class="btn btn-default"> Add Category </button>
    </p>
        <p> <label>Book Copies</label> </p>
            <div id="bookCopies">
                <table class="col-sm-12 table-hover">
                
                @for (int i = 0; i < Model.BookCopies.Count(); i++)
                {
                    <tr>
                        <td class="col-sm-2">BookCopyId = @Model.BookCopies[i].Id</td>
                        <td class="col-sm-10">
                            <div class="bookCopy" data-book-copy-id="@i">
                                @Html.HiddenFor(m => m.BookCopies[i].Id)
                                @Html.EnumDropDownListFor(m => m.BookCopies[i].BookCondition, new { @class = "form-control"})
                            </div>
                        </td>
                    </tr>
                }
                </table>
            </div>

        <p> <input type="button" id="AddBookCopy" value="Add Copy" class="btn btn-default" /> </p>
        <p> <input type="submit" value="Save" class="btn btn-primary" /> </p>

    }


</div>

@section scripts{

<script>
    $(document).ready(function () {
        $(".book-category").change(addNewSubcategory);
    });

    // Add new category select on button click.
    $(document).ready(function (){
        $("#add-category").click(function () {

            // Create new book-category-subcategory div.
        var newCategorySubCDiv = document.createElement("div");
            newCategorySubCDiv.className = "book-category-subcategory form-inline";

            var categoryDiv = document.createElement("div");
            categoryDiv.className = "form-group";
            newCategorySubCDiv.appendChild(categoryDiv);

            var categoryLabel = document.createElement("label");
            categoryLabel.innerHTML = "Category";
            categoryDiv.appendChild(categoryLabel);

            // Set select category and set chenge event function
            var select = $(".book-category").first().clone().appendTo(categoryDiv);
            select.change(addNewSubcategory)
            $("#book-categories-subcategories").append(newCategorySubCDiv)
        });
    });

    function  addNewSubcategory() {

        var categorySelect = $(this);
        var selectedId = categorySelect.val()
            // Retreive book sub categories.
            var ajaxData = {
                data: {
                    categoryId: $(this).val()
                },
                method: "GET",
                complete: function (jqXHR) {
                    var subCategories = jqXHR.responseJSON;

                    if (categorySelect.parent().siblings().length != 0) {

                        var a = categorySelect.parent().siblings(".book-subcategory").html("")
                    }
                     
                        var selectCategoryNumber = $(".book-category").length - 1;

                        //  Add subcategory dropdow for current choosen category.
                        var formGroup = document.createElement("div");
                        formGroup.className = "form-group book-subcategory";                        

                        var label = document.createElement("label");
                        label.innerHTML = "SubCategory";

                        var select = document.createElement("select");
                        select.name = "BookSubcategories[" + selectCategoryNumber + "].Id";
                        select.className = "form-control";
                 
                        for (var i = 0; i < subCategories.length; i++) {
                            var option = document.createElement("option");
                            option.value = subCategories[i].Value;
                            option.innerHTML = subCategories[i].Name;
                            select.appendChild(option);
                        }

                        formGroup.appendChild(label);
                        formGroup.appendChild(select);

                        var categoryFormGroup = categorySelect.parent();
                        var categorySubcategory = categoryFormGroup.parent();
                        categorySubcategory.append(formGroup);                   
                }
            };
            $.ajax("@Url.Action("ListBookSubCategories", "BooksManagement")", ajaxData);
        };

    $(document).ready(function () {
        $("#AddBookAuthor").click(function () {
            var authorsDiv = document.getElementById("bookAuthors");
            var newBookAuthorId = parseInt($("#bookAuthors .bookAuthor").last().data("authorId")) + 1;

            if (isNaN(newBookAuthorId)) {
                newBookAuthorId = 0;
            }

            // Create a div for new Author
            var newAuthorDiv = document.createElement("div")
            newAuthorDiv.className = "bookAuthor";
            newAuthorDiv.setAttribute("data-author-id", newBookAuthorId);

            // Create inputs for Author Data
            var newFirstNameLabel = document.createElement("label");
            newFirstNameLabel.innerHTML = "First Name";

            var newFirstNameInput = document.createElement("input");
            newFirstNameInput.name = "Authors[" + newBookAuthorId + "].FirstName";
            newFirstNameInput.type = "text";

            var newMiddleNameLabel = document.createElement("label");
            newMiddleNameLabel.innerHTML = "Middle Name";

            var newMiddleNameInput = document.createElement("input");
            newMiddleNameInput.name = "Authors[" + newBookAuthorId + "].MiddleName";
            newMiddleNameInput.type = "text";

            var newLastNameLabel = document.createElement("label");
            newLastNameLabel.innerHTML = "Last Name";

            var newLastNameInput = document.createElement("input");
            newLastNameInput.name = "Authors[" + newBookAuthorId + "].LastName";
            newLastNameInput.type = "text";

            // Add imputs to created Author div
            newAuthorDiv.appendChild(newFirstNameLabel)
            newAuthorDiv.appendChild(newFirstNameInput);

            newAuthorDiv.appendChild(newMiddleNameLabel)
            newAuthorDiv.appendChild(newMiddleNameInput);

            newAuthorDiv.appendChild(newLastNameLabel)
            newAuthorDiv.appendChild(newLastNameInput);

            // Add new Author div to all authors
            $("#bookAuthors").append(newAuthorDiv);
        })
    });

    $(document).ready(function () {
        $("#AddBookCopy").click(function () {
            // Retreive book conditions.
            var ajaxData = {
                method: "GET",
                complete: function (jqXHR) {
                    var bookConditions = jqXHR.responseJSON;

                    var newId = parseInt($("#bookCopies .bookCopy").last().data("bookCopyId")) + 1;

                    if (isNaN(newId)) {
                        newId = 0;
                    }
                    
                    var newTr = document.createElement("tr");

                    var newTd = document.createElement("td");
                    newTd.className = "col-sm-2";
                    newTd.innerHTML = "BookCopyId = newId";

                    var newTd2 = document.createElement("td");
                    newTd2.className = "col-sm-10";

                    var newDiv = document.createElement("div");
                    newDiv.className = "bookCopy";
                    $(newDiv).data("book-copy-id", newId);

                    var bookCopySelect = document.createElement("select");
                    bookCopySelect.id = "BookCopies_" + newId + "__BookCondition";
                    bookCopySelect.name = "BookCopies[" + newId + "].BookCondition";
                    bookCopySelect.setAttribute("dataid", newId);
                    bookCopySelect.className = "form-control";

                    // Fill dropdown.
                    for (var i = 0; i < bookConditions.length; i++) {
                        var optionElement = document.createElement("option");
                        optionElement.value = bookConditions[i].Value;
                        optionElement.innerHTML = bookConditions[i].Name;

                        bookCopySelect.appendChild(optionElement);
                    }

                    newDiv.appendChild(bookCopySelect);
                    newTd2.appendChild(newDiv);
                    newTr.appendChild(newTd);
                    newTr.appendChild(newTd2);
                    
                    $("#bookCopies table").append(newTr);
                }
            };
            $.ajax("@Url.Action("ListBookConditions", "BooksManagement")", ajaxData);
        });

    });
</script>

}

