@model OnlineLibrary.Web.Models.UserLoansViewModels.UserLoansViewModel

@{
    ViewBag.Title = "My Loans";
}

<h2>My Loans</h2>

<ul class="nav nav-tabs">
    <li class="active">
        <a data-toggle="tab" href="#active">
            Active Loans
            <span id="activeLoansBadge" class="badge"></span>
        </a>
    </li>
    <li>
        <a data-toggle="tab" href="#requests">Requests
            <span id="requestsBage" class="badge"></span>
        </a>
    </li>
    <li><a data-toggle="tab" href="#history">History</a></li>
</ul>

<div class="tab-content">
    @* Active Loans Tab *@
    <div id="active" class="tab-pane fade in active">
        <p></p>
        <div class="row">
            <div class="col-sm-2"></div>
            <div class="col-sm-8">
                
                <table class="table table-bordered">

                    @* Active loans *@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                            Active loans
                        </th>
                    </tr>
                    
                    @{ 
                        int counter = 0;
                     }

                    @if (!(Model.InProgressLoans.Select(loan => ((loan.ExpectedReturnDate.Value - DateTime.Now).Days > 5)).Any()))
                    {
                        <tr>
                            <td colspan="8">
                                There are no approved loans.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.InProgressLoans)
                        {
                            if ((loan.ExpectedReturnDate.Value - DateTime.Now).Days > 5)
                            {
                            <tr class="success" title="Active loans">
                                <td>#@(++counter)</td>
                                <td colspan="7">
                                    You have loaned
                                    <strong>"@loan.Title"</strong> and you are expected to return the book before
                                    <strong>@string.Format("{0:dddd, MMMM dd, yyyy}", loan.ExpectedReturnDate)</strong>
                                </td>
                            </tr>
                        }
                      }
                    }

                    @* Soon expiring *@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-bell" aria-hidden="true"></span>
                            Soon expiring loans
                        </th>
                    </tr>
                    
                    @{ 
                        counter = 0;
                     }

                    @if (!(Model.InProgressLoans.Select(loan => ((loan.ExpectedReturnDate.Value - DateTime.Now).Days <= 5 && (loan.ExpectedReturnDate.Value - DateTime.Now).Days > 0)).Any()))
                    {
                        <tr>
                            <td colspan="8">
                                There are no soon expiring loans.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.InProgressLoans)
                        {
                            if ((loan.ExpectedReturnDate.Value - DateTime.Now).Days <= 5 && (loan.ExpectedReturnDate.Value - DateTime.Now).Days > 0)
                            {
                            <tr class="warning" title="Soon expiring loans">
                                <td>#@(++counter)</td>
                                <td colspan="7">
                                    You have loaned <strong>"@loan.Title"</strong> and you are expected to return the book before @string.Format("{0:dddd, MMMM dd, yyyy}", loan.ExpectedReturnDate)  - you have <strong>@((loan.ExpectedReturnDate.Value - DateTime.Now).Days) days left</strong>!
                                </td>
                            </tr>
                          }
                      }
                    }

                    @* Overdue loans *@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-alert" aria-hidden="true"></span>
                            Overdue loans
                        </th>
                    </tr>
                                        
                   @{ 
                       counter = 0;
                    }
                    
                   @if (!(Model.InProgressLoans.Select(loan => ((loan.ExpectedReturnDate.Value - DateTime.Now).Days <= 0)).Any()))
                   {
                        <tr>
                            <td colspan="8">
                                There are no overdue loans.
                            </td>
                        </tr>
                   }
                   else
                   {
                       foreach (var loan in Model.InProgressLoans)
                       {
                           if ((loan.ExpectedReturnDate.Value - DateTime.Now).Days <= 0)
                           {
                              <tr class="danger" title="Overdue loans">
                                  <td>#@(++counter)</td>
                                  <td colspan="7">
                                      You have loaned <strong>"@loan.Title"</strong> and you are expected to return the book before @string.Format("{0:dddd, MMM d, yyyy}", loan.ExpectedReturnDate) - the return time is <strong>@((DateTime.Now - loan.ExpectedReturnDate.Value).Days) days overdue</strong>!
                                  </td>
                              </tr>
                           }
                       }
                   }
                </table>
            </div>
            <div class="col-sm-2"></div>
            <br />
        </div>
    </div>    
    
    @* Requests Tab *@
    <div id="requests" class="tab-pane fade">
        <p></p>
        <div class="row">
            <div class="col-sm-2"></div>
            <div class="col-sm-8">
                <table class="table table-bordered">

                    @* Approved loan requests label *@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                            Approved loan requests
                        </th>
                    </tr>

                    @{
                        counter = 0;
                    }
                    @if (!Model.ApprovedLoans.Any())
                    {
                        <tr>
                            <td colspan="8">
                                There are no approved loan requests.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.ApprovedLoans)
                        {
                            <tr class="success" title="Approved loan requests">
                                <td>#@(++counter)</td>
                                <td colspan="8">
                                    You have sent a loan request for the book <strong>"@loan.Title"</strong> - it was approved. You are expected to go to the library and take the book. You have to perform the loan before <strong>@loan.BookPickUpLimitDate.Value.ToLongDateString()</strong>.
                                </td>
                            </tr>
                        }
                    }

                    @* Pending loan requests label *@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-time" aria-hidden="true"></span>
                            Pending loan requests
                        </th>
                    </tr>
                    
                    @{
                        counter = 0;
                    }
                    @if (!Model.PendingLoans.Any())
                    {
                        <tr>
                            <td colspan="8">
                                You have no pending loans.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.PendingLoans)
                        {
                            <tr class="warning" title="Pending loan requests">
                                <td>#@(++counter)</td>
                                <td colspan="8">
                                    Your loan request for <strong> "@loan.Title" </strong> is pending confirmation.
                                </td>
                            </tr>
                        }
                    }
                
                    @* Rejected loan requests label *@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-alert" aria-hidden="true"></span>
                            Rejected loan requests
                        </th>
                    </tr>
                    
                    @{
                        counter = 0;
                    }
                    @if (!Model.NotSeenRejectedLoans.Any())
                    {
                        <tr>
                            <td colspan="8">
                                There are no unseen rejected loan requests.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.NotSeenRejectedLoans)
                        {
                            <tr class="danger" title="Rejected loan requests">
                                <td>#@(++counter)</td>
                                <td colspan="6">
                                    Your request for <strong> "@loan.BookTitle" </strong> was rejected.
                                </td>
                                <td colspan="2">
                                    @using (Html.BeginForm("HideRejectedLoanNotification", "UserLoans", new { loanId = loan.HistoryLoanId }))
                                    {
                                        <input type="submit" class="btn btn-primary" value="Seen" />
                                    }
                                </td>
                            </tr>
                        }
                    }

                </table>
              </div>
            <div class="col-sm-2"></div>
            <br />
        </div>
    </div>

    @* History Tab *@
    <div id="history" class="tab-pane fade">
        <p></p>
        <div class="row">
            <div class="col-sm-2"></div>
            <div class="col-sm-8">

                <table class="table table-bordered">

                    @* Returned books label*@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-repeat" aria-hidden="true"></span>
                            Returned books
                        </th>
                    </tr>
                    @{
                        counter = 0;
                    }
                    @if (!Model.CompletedLoans.Any())
                    {
                        <tr>
                            <td colspan="8">
                                You have no returned books.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.CompletedLoans)
                        {
                            <tr class="success" title="Returned books">
                                <td>#@(++counter)</td>
                                <td colspan="7">
                                    You have loaned the book <strong> "@loan.BookTitle" </strong> on @loan.StartDate.Value.ToLongDateString(). It was lent to you by @loan.LibrarianName. You were expected to return it on @loan.ExpectedReturnDate.Value.ToLongDateString(). You returned it on @loan.ActualReturnDate.Value.ToLongDateString(). The initial book condition was @loan.InitialBookCondition, the returned book condition was @loan.FinalBookCondition.
                                </td>
                            </tr>
                        }
                    }

                    @* Lost books label *@

                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
                            Lost books
                        </th>
                    </tr>

                    @{
                        counter = 0;
                    }

                    @if (!Model.LostBookLoans.Any())
                    {
                        <tr>
                            <td colspan="8">
                                You have no lost books.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.LostBookLoans)
                        {
                            <tr class="success" title="Returned books">
                                <td>#@(++counter)</td>
                                <td colspan="7">
                                    You have loaned the book <strong> "@loan.BookTitle" </strong> on @loan.StartDate.Value.ToLongDateString(). It was lent to you by @loan.LibrarianName, but you have lost it.
                                </td>
                            </tr>
                        }
                    }

                    @* Rejected loan requests label *@
                    <tr class="active">
                        <th colspan="8">
                            <span class="glyphicon glyphicon-alert" aria-hidden="true"></span>
                            Rejected loan requests
                        </th>
                    </tr>

                    @{
                        counter = 0;
                    }
                    @if (!Model.AllRejectedLoans.Any())
                    {
                        <tr>
                            <td colspan="8">
                                There are no rejected loan requests.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var loan in Model.AllRejectedLoans)
                        {
                            <tr class="danger" title="Rejected loan requests">
                                <td>#@(++counter)</td>
                                <td colspan="7">
                                    Your request for <strong> "@loan.BookTitle" </strong> was rejected by @loan.LibrarianName.
                                </td>
                            </tr>
                        }
                    }
                    
                </table>
            </div>
            <div class="col-sm-2"></div>
            <br />
        </div>
    </div>
</div>

@section scripts{
<script>
    $(document).ready(function ()
    {
        var activeLoansBageNumber = @Model.InProgressLoans.Where(al => (al.ExpectedReturnDate.Value - DateTime.Now).Days <= 5).Count();
        if (activeLoansBageNumber != 0)
        {
            $("#activeLoansBadge").text(activeLoansBageNumber);
        }
        else
        {
            $("#activeLoansBadge").text("");
        }

    });

    $(document).ready(function ()
    {
        var RequestsBageNumber = @Model.ApprovedLoans.Count() + @Model.AllRejectedLoans.Count();
        if (RequestsBageNumber != 0)
        {
            $("#requestsBage").text(RequestsBageNumber);
        }
        else
        {
            $("#requestsBage").text("");
        }
    });

</script>
}